@page "/usuario/editar/{Id:int}"
@using TP3MovilFullstack.Models 
@using TP3MovilFullstack.Services 
@inject NavigationManager navigationManager
@inject UserService userService

<PageTitle>Editar Usuario</PageTitle>

@if (usuario == null)
{
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="alert alert-warning text-center" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    No se encontró el usuario solicitado.
                </div>
                <div class="text-center">
                    <button class="btn btn-primary" @onclick="VolverAlListado">
                        <i class="bi bi-arrow-left me-1"></i>
                        Volver al Listado
                    </button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container py-4">
        <div class="row">
            <div class="col-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/usuarios" class="text-decoration-none">
                                <i class="bi bi-people me-1"></i>Usuarios
                            </a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="/usuario/detalle/@Id" class="text-decoration-none">@usuarioOriginal?.Nombre</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">Editar</li>
                    </ol>
                </nav>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow">
                    <div class="card-header bg-warning text-dark">
                        <h3 class="mb-0">
                            <i class="bi bi-pencil me-2"></i>
                            Editar Usuario: @usuarioOriginal?.Nombre
                        </h3>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(mensajeError))
                        {
                            <div class="alert alert-danger" role="alert">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                @mensajeError
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(mensajeExito))
                        {
                            <div class="alert alert-success" role="alert">
                                <i class="bi bi-check-circle me-2"></i>
                                @mensajeExito
                            </div>
                        }

                        <EditForm Model="@usuario" OnValidSubmit="@GuardarCambios">
                            <DataAnnotationsValidator />
                            <ValidationSummary class="text-danger mb-3" />
                            
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="mb-3">
                                        <label for="nombre" class="form-label">Nombre Completo *</label>
                                        <InputText @bind-Value="@usuario.Nombre" class="form-control" id="nombre" placeholder="Ingrese el nombre completo" />
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Correo Electrónico *</label>
                                        <InputText @bind-Value="@usuario.Email" type="email" class="form-control" id="email" placeholder="usuario@ejemplo.com" />
                                        <div class="form-text">Este email se usará para iniciar sesión</div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="password" class="form-label">Contraseña</label>
                                        <InputText @bind-Value="@usuario.Password" type="password" class="form-control" id="password" placeholder="Dejar vacío para mantener la actual" />
                                        <div class="form-text">
                                            Mínimo 6 caracteres. Deja en blanco si no quieres cambiarla.
                                        </div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="imagen" class="form-label">Foto de Perfil</label>
                                        <InputText @bind-Value="@usuario.ImagenPath" class="form-control" id="imagen" placeholder="Nombre del archivo (ej: foto.jpg)" />
                                        <div class="form-text">
                                            Coloca tu imagen en la carpeta <strong>Resources/Images</strong> y escribe solo el nombre del archivo.
                                            <br />Archivos disponibles: perro.jpg, dotnet_bot.svg
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label class="form-label">Vista previa actual:</label>
                                        <div class="border rounded p-3 d-flex align-items-center justify-content-center" style="height: 200px; background-color: #f8f9fa;">
                                            @if (!string.IsNullOrWhiteSpace(usuario.ImagenPath))
                                            {
                                                <img src="@usuario.ImagenPath" 
                                                     alt="Vista previa de @usuario.Nombre" 
                                                     class="rounded-circle" 
                                                     style="width: 120px; height: 120px; object-fit: cover;"
                                                     onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                                                <div class="text-center text-muted" style="display: none;">
                                                    <i class="bi bi-person" style="font-size: 3rem;"></i>
                                                    <p class="mt-2 mb-0 small">No encontrada</p>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="text-center text-muted">
                                                    <i class="bi bi-person" style="font-size: 3rem;"></i>
                                                    <p class="mt-2 mb-0 small">Sin foto</p>
                                                </div>
                                            }
                                        </div>
                                    </div>

                                    <div class="card bg-light">
                                        <div class="card-header">
                                            <h6 class="mb-0">
                                                <i class="bi bi-info-circle me-1"></i>
                                                Información del Usuario
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <ul class="list-unstyled small mb-0">
                                                <li><strong>ID:</strong> #@usuario.Id</li>
                                                <li><strong>Nombre:</strong> @(string.IsNullOrWhiteSpace(usuario.Nombre) ? "Sin especificar" : usuario.Nombre)</li>
                                                <li><strong>Email:</strong> @(string.IsNullOrWhiteSpace(usuario.Email) ? "Sin especificar" : usuario.Email)</li>
                                                <li><strong>Contraseña:</strong> @(string.IsNullOrWhiteSpace(usuario.Password) ? "Sin cambios" : "Será actualizada")</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <hr />
                            
                            <div class="d-flex flex-wrap gap-2 justify-content-between">
                                <div class="d-flex gap-2">
                                    <button type="button" class="btn btn-secondary" @onclick="Cancelar">
                                        <i class="bi bi-x-circle me-1"></i>
                                        Cancelar
                                    </button>
                                    <button type="button" class="btn btn-outline-info" @onclick="VerDetalle">
                                        <i class="bi bi-eye me-1"></i>
                                        Ver Detalle
                                    </button>
                                </div>
                                
                                <div class="d-flex gap-2">
                                    <button type="button" class="btn btn-outline-warning" @onclick="RestaurarValores" title="Restaurar valores originales">
                                        <i class="bi bi-arrow-clockwise me-1"></i>
                                        Restaurar
                                    </button>
                                    <button type="submit" class="btn btn-success" disabled="@guardando">
                                        @if (guardando)
                                        {
                                            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                            <span>Guardando...</span>
                                        }
                                        else
                                        {
                                            <i class="bi bi-check-circle me-1"></i>
                                            <span>Guardar Cambios</span>
                                        }
                                    </button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    private Usuarios? usuario;
    private Usuarios? usuarioOriginal; // Para guardar los valores originales
    private string mensajeError = string.Empty;
    private string mensajeExito = string.Empty;
    private bool guardando = false;

    protected override void OnInitialized()
    {
        CargarUsuario();
    }

    private void CargarUsuario()
    {
        var usuarioEncontrado = userService.GetUsuario(Id);
        if (usuarioEncontrado != null)
        {
            // Guardamos una copia de los valores originales
            usuarioOriginal = new Usuarios
            {
                Id = usuarioEncontrado.Id,
                Nombre = usuarioEncontrado.Nombre,
                Email = usuarioEncontrado.Email,
                Password = usuarioEncontrado.Password,
                ImagenPath = usuarioEncontrado.ImagenPath
            };

            // Creamos una copia para editar
            usuario = new Usuarios
            {
                Id = usuarioEncontrado.Id,
                Nombre = usuarioEncontrado.Nombre,
                Email = usuarioEncontrado.Email,
                Password = string.Empty, // Limpiamos la contraseña para edición
                ImagenPath = usuarioEncontrado.ImagenPath
            };
        }
    }

    private async Task GuardarCambios()
    {
        mensajeError = string.Empty;
        mensajeExito = string.Empty;
        guardando = true;

        try
        {
            // Validaciones básicas
            if (string.IsNullOrWhiteSpace(usuario.Nombre))
            {
                mensajeError = "El nombre es obligatorio.";
                return;
            }

            if (string.IsNullOrWhiteSpace(usuario.Email))
            {
                mensajeError = "El email es obligatorio.";
                return;
            }

            // Verificar si el email ya existe (excluyendo el usuario actual)
            if (userService.EmailExists(usuario.Email, usuario.Id))
            {
                mensajeError = "Ya existe otro usuario con ese email.";
                return;
            }

            // Si no se especificó nueva contraseña, mantener la original
            if (string.IsNullOrWhiteSpace(usuario.Password))
            {
                usuario.Password = usuarioOriginal.Password;
            }
            else if (usuario.Password.Length < 6)
            {
                mensajeError = "La contraseña debe tener al menos 6 caracteres.";
                return;
            }

            // Simular delay de guardado
            await Task.Delay(500);

            bool actualizado = userService.UpdateUsuario(usuario);
            if (actualizado)
            {
                mensajeExito = "Usuario actualizado correctamente.";
                // Actualizar valores originales
                usuarioOriginal = new Usuarios
                {
                    Id = usuario.Id,
                    Nombre = usuario.Nombre,
                    Email = usuario.Email,
                    Password = usuario.Password,
                    ImagenPath = usuario.ImagenPath
                };
                
                // Limpiar contraseña para próximas ediciones
                usuario.Password = string.Empty;
                
                StateHasChanged();
                
                // Redirigir después de un breve delay
                await Task.Delay(1000);
                navigationManager.NavigateTo($"/usuario/detalle/{Id}");
            }
            else
            {
                mensajeError = "Error al actualizar el usuario.";
            }
        }
        catch (Exception ex)
        {
            mensajeError = $"Error al guardar cambios: {ex.Message}";
        }
        finally
        {
            guardando = false;
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo($"/usuario/detalle/{Id}");
    }

    private void VerDetalle()
    {
        navigationManager.NavigateTo($"/usuario/detalle/{Id}");
    }

    private void VolverAlListado()
    {
        navigationManager.NavigateTo("/usuarios");
    }

    private void RestaurarValores()
    {
        if (usuarioOriginal != null && usuario != null)
        {
            usuario.Nombre = usuarioOriginal.Nombre;
            usuario.Email = usuarioOriginal.Email;
            usuario.Password = string.Empty; // Mantenemos vacía la contraseña
            usuario.ImagenPath = usuarioOriginal.ImagenPath;
            
            mensajeError = string.Empty;
            mensajeExito = string.Empty;
            
            StateHasChanged(); // Forzar actualización de la UI
        }
    }
}
