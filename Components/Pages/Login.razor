@page "/login"
@using System.ComponentModel.DataAnnotations
@inject TP3MovilFullstack.Services.UserService UserService
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="card shadow-lg p-4" style="width: 25rem;">
        <div class="card-body">
            <h3 class="card-title text-center mb-4">Iniciar Sesión</h3>
           
            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="emailInput" class="form-label">Correo Electrónico</label>
                    <InputText type="email" class="form-control" id="emailInput" @bind-Value="loginModel.Email" />
                </div>
                <div class="mb-3">
                    <label for="passwordInput" class="form-label">Contraseña</label>
                    <InputText type="password" class="form-control" id="passwordInput" @bind-Value="loginModel.Password" />
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Iniciar Sesión</button>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary" @onclick="Registro">Registro</button>
                </div>
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-3">@errorMessage</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    private void HandleLogin()
    {
        var user = UserService.ValidateLogin(loginModel.Email, loginModel.Password);
        if (user != null)
        {
            // Redirigir al listado de películas
            Navigation.NavigateTo("/peliculas");
        }
        else
        {
            errorMessage = "Correo o contraseña incorrectos.";
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "El correo es obligatorio")]
        [EmailAddress(ErrorMessage = "Correo inválido")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        public string Password { get; set; } = string.Empty;
    }

    public void Registro(){
        Navigation.NavigateTo("/registro"); 
    }
}
